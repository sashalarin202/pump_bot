const WebSocket = require('ws');
const axios = require('axios');

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram
const TELEGRAM_TOKEN = '8087924083:AAEPsBIU4QEuW1hv2mQkc-b8EP7H8Qe0FL0';
const CHAT_ID = '440662174';

// –ü–æ—Ä–æ–≥ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
const PRICE_CHANGE_THRESHOLD = 1; // 5%

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –Ω–∞—á–∞–ª—å–Ω—ã—Ö —Ü–µ–Ω
const initialPrices = {};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
async function sendToTelegram(message, parseMode) {
  const url = `https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage`;
  try {
    await axios.post(url, {
      chat_id: CHAT_ID,
      text: message,
      parse_mode: parseMode // –ø–µ—Ä–µ–¥–∞–µ–º parse_mode
    });
    console.log('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram:', message);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram:', error.response.data.description);
  }
}

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ WebSocket Binance
const ws = new WebSocket('wss://stream.binance.com:9443/ws/!ticker');

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π WebSocket
ws.on('message', (data) => {
  const ticker = JSON.parse(data);

  const symbol = ticker.s; // –°–∏–º–≤–æ–ª –º–æ–Ω–µ—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, BTCUSDT)
  const currentPrice = parseFloat(ticker.c); // –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞ –º–æ–Ω–µ—Ç—ã

  // –ï—Å–ª–∏ –Ω–∞—á–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –Ω–µ –∑–∞–¥–∞–Ω–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –µ—ë
  if (!initialPrices[symbol]) {
    initialPrices[symbol] = currentPrice;
    return;
  }

  // –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω—ã
  const initialPrice = initialPrices[symbol];
  const priceChangePercent = ((currentPrice - initialPrice) / initialPrice) * 100;

  // –ï—Å–ª–∏ —Ä–æ—Å—Ç —Ü–µ–Ω—ã –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ø–æ—Ä–æ–≥, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
  if (priceChangePercent >= PRICE_CHANGE_THRESHOLD) {
    const message = `
    üöÄ –ú–æ–Ω–µ—Ç–∞ ${symbol} –≤—ã—Ä–æ—Å–ª–∞ –Ω–∞ ${priceChangePercent.toFixed(2)}% –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: ${currentPrice} \n[inline URL](http://www.example.com/)
    `;
    const escapedMessage = message.replace(/\./g, '\\.');
    sendToTelegram(escapedMessage, 'MarkdownV2'); // –î–æ–±–∞–≤–∏—Ç—å 'MarkdownV2' –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä

    // –û–±–Ω–æ–≤–∏—Ç—å –Ω–∞—á–∞–ª—å–Ω—É—é —Ü–µ–Ω—É, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    initialPrices[symbol] = currentPrice;
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ WebSocket
ws.on('error', (error) => {
  console.error('–û—à–∏–±–∫–∞ WebSocket:', error.message);
});

ws.on('close', () => {
  console.log('–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å WebSocket –∑–∞–∫—Ä—ã—Ç–æ. –ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...');
  setTimeout(() => {
    process.exit(1); // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  }, 1000);
});
